--
-- AADL-RAMSES
-- 
-- Copyright ¬© 2012 TELECOM ParisTech and CNRS
-- 
-- TELECOM ParisTech/LTCI
-- 
-- Authors: see AUTHORS
-- 
-- This program is free software: you can redistribute it and/or modify 
-- it under the terms of the Eclipse Public License as published by Eclipse,
-- either version 1.0 of the License, or (at your option) any later version.
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-- Eclipse Public License for more details.
-- You should have received a copy of the Eclipse Public License
-- along with this program.  If not, see 
-- http://www.eclipse.org/org/documents/epl-v10.php
--

package test_sampling
public
 with POK, ARINC653, Data_Model, common_pkg;
  system root
  end root;

  system implementation root.impl
  subcomponents
    the_cpu: processor common_pkg::cpu.two_partitions;
    the_proc1: process proc1.impl;
    the_proc2: process proc2.impl;
    the_mem: memory common_pkg::mem.two_partitions;
  connections
    cnx: port the_proc1.p_out -> the_proc2.p_in;
  properties
    actual_processor_binding => (reference (the_cpu.the_part1)) applies to the_proc1;
    actual_processor_binding => (reference (the_cpu.the_part2)) applies to the_proc2;
    actual_memory_binding => (reference (the_mem.part1_mem)) applies to the_proc1;
    actual_memory_binding => (reference (the_mem.part2_mem)) applies to the_proc2;
  end root.impl;

  process proc1
  features
    p_out: out data port common_pkg::Integer {ARINC653::Sampling_Refresh_Period => 10 ms;};
  end proc1;

  process implementation proc1.impl
  subcomponents
    the_sender: thread common_pkg::data_sender.impl;
  connections
    cnx: port the_sender.p_out -> p_out;
  end proc1.impl;

  process proc2
  features
    p_in: in data port common_pkg::Integer {ARINC653::Sampling_Refresh_Period => 10 ms;};
  end proc2;

  process implementation proc2.impl
  subcomponents
    the_receiver: thread common_pkg::data_receiver.impl;
  connections
    cnx: port p_in -> the_receiver.p_in;
  end proc2.impl;

end test_sampling;