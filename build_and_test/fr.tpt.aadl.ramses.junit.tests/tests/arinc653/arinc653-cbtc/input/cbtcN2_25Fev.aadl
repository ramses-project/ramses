---------------------------------------------------
-- AADL2.1
-- aadlrev2.3
-- (c)Ellidiss Technologies
-- 12Feb2013
---------------------------------------------------

PACKAGE cbtc
PUBLIC

WITH AADL_Project;
WITH Data_Model;
WITH Timing_Properties;
WITH Memory_Properties;
WITH Thread_Properties;
WITH Programming_Properties;
WITH Deployment_Properties;
WITH ARINC653;
WITH COAL;
WITH POK;
WITH Generation_Properties;
DATA VobcData
PROPERTIES
  Data_Model::Data_Representation => Struct;
  Data_Model::Enumerators => ("ident","train_position_m","train_position_mm","direction","speed");
  Data_Model::Element_Names => ("long","long","long","long","long");
  Source_Language => (C);
  Source_Name => "VobcData";
  Source_Text => ("business-code/cbtc_module.h");
END VobcData;

DATA OdometerData
PROPERTIES
  Data_Model::Data_Representation => Struct;
  Data_Model::Enumerators => ("ident","wheel_angle","speed");
  Data_Model::Element_Names => ("long","long","long");
  Source_Language => (C);
  Source_Name => "OdometerData";
  Source_Text => ("business-code/cbtc_module.h");
END OdometerData;

DATA TractionData
PROPERTIES
  Data_Model::Data_Representation => Struct;
  Data_Model::Enumerators => ("ident","msg_cycle","acceleration","limit_position","maxi_speed","direction");
  Data_Model::Element_Names => ("long","long","long","long","long","long");
  Source_Language => (C);
  Source_Name => "TractionData";
  Source_Text => ("business-code/cbtc_module.h");
END TractionData;

DATA EndOfAuthority
PROPERTIES
  Data_Model::Data_Representation => Struct;
  Data_Model::Enumerators => ("ident","limit_position");
  Data_Model::Element_Names => ("long","long");
  Source_Language => (C);
  Source_Name => "EndOfAuthority";
  Source_Text => ("business-code/cbtc_module.h");
END EndOfAuthority;

DATA TrainPosition
PROPERTIES
  Data_Model::Data_Representation => Struct;
  Data_Model::Enumerators => ("train_position","train_direction");
  Data_Model::Element_Names => ("long","long");
  Source_Language => (C);
  Source_Name => "TrainPosition";
  Source_Text => ("business-code/cbtc_module.h");
END TrainPosition;

DATA ViuData
PROPERTIES
  Data_Model::Data_Representation => Struct;
  Data_Model::Enumerators => ("ident","train_position","direction");
  Data_Model::Element_Names => ("long","long","long");
  Source_Language => (C);
  Source_Name => "ViuData";
  Source_Text => ("business-code/cbtc_module.h");
END ViuData;

DATA CdvData
PROPERTIES
  Data_Model::Data_Representation => Struct;
  Data_Model::Enumerators => ("ident","train_position");
  Data_Model::Element_Names => ("long","long");
  Source_Language => (C);
  Source_Name => "CdvData";
  Source_Text => ("business-code/cbtc_module.h");
END CdvData;

DATA TrainData
PROPERTIES
  Data_Model::Data_Representation => Struct;
  Data_Model::Enumerators => ("source_ident","destination_ident","computing_element","msg_cycle","direction","acceleration","limit_position","maxi_speed","speed","distance_m","distance_mm","sim_ctrl_1","sim_ctrl_2","sim_ctrl_3","sim_ctrl_4");
  Data_Model::Element_Names => ("ulong","ulong","long","long","ulong","long","long","long","long","long","long","long","long","long","long");
  Source_Language => (C);
  Source_Name => "TrainData";
  Source_Text => ("business-code/cbtc_module.h");
  Data_Size => 2 bytes;
END TrainData;

DATA TrainPositionOffset
PROPERTIES
  Data_Model::Base_Type => (CLASSIFIER(COAL::long));
  Source_Language => (C);
  Source_Name => "TrainPositionOffset";
  Source_Text => ("business-code/cbtc_module.h");
END TrainPositionOffset;

SYSTEM monoProc
END monoProc;

SYSTEM IMPLEMENTATION monoProc.impl
SUBCOMPONENTS
  root_main_memory_inst : MEMORY root_main_memory.impl;
  train_inst : PROCESS train.impl;
  railway_inst : PROCESS railway.impl;
  root_inst : PROCESSOR root.impl {
    Thread_Swap_Execution_Time => 5ms..10ms;
    ARINC653::Module_Major_Frame => 600ms;
    ARINC653::Module_Schedule => (
       	[Partition => reference(VP_railway_inst); Duration => 300ms; Periodic_Processing_Start => true;],
	[Partition => reference(VP_train_inst); Duration => 300ms; Periodic_Processing_Start => true;]
    );
    ARINC653::HM_Error_ID_Levels => (
    	[ErrorIdentifier => 1; Description => "Module configuration error"; ErrorLevel=>Module_Level;ErrorCode=>Module_Config;]
    );
    ARINC653::HM_Error_ID_Actions => (
    	[ErrorIdentifier => 1; Description => "Ignore"; Action => "Ignore";]
    );
    ARINC653::Module_Version => "1.0";
    ARINC653::Module_Identifier => "cbtc.root";
    Process_Swap_Execution_Time => 5ms..10ms;
    Scheduling_Protocol => (ARINC653);
    -- flush on windows
    -- POK::Module_Minor_Frame => 1ms;
    POK::Ports_Flush_Time => Partition_Slot_Switch;
    POK::Architecture => x86;
    POK::BSP => x86_qemu;
  };
CONNECTIONS
  eoaFromMauToVobc_proc_cnx : PORT railway_inst.EoaSending_inst_eoaForVobcOut -> train_inst.TrainSpeedAccelCompute_inst_eoaIn;
  trainPositionFromVobcToMau_proc_cnx : PORT train_inst.TrainSpeedAccelCompute_inst_trainPositionForMauOut -> railway_inst.TrainPositionsCorrelation_inst_trainPositionVobcForMauIn;
  trainDataFromTrainPpuToTrainSim_proc_cnx : PORT train_inst.trainPpu_inst_trainDataOut -> railway_inst.TrainSimu_inst_trainDataIn;
  trainDataFromTrainSimuToTrainPpu_proc_cnx : PORT railway_inst.TrainSimu_inst_trainDataOut -> train_inst.trainPpu_inst_trainDataIn;
PROPERTIES
  Actual_Processor_Binding => (REFERENCE(root_inst.VP_train_inst)) APPLIES TO train_inst;
  Actual_Processor_Binding => (REFERENCE(root_inst.VP_railway_inst)) APPLIES TO railway_inst;
  Actual_Memory_Binding => (REFERENCE(root_main_memory_inst)) APPLIES TO train_inst;
  Actual_Memory_Binding => (REFERENCE(root_main_memory_inst)) APPLIES TO railway_inst;
  ARINC653::Sampling_Refresh_Period => 10ms APPLIES TO train_inst.trainPpu_inst_trainDataOut;
  ARINC653::Sampling_Refresh_Period => 10ms APPLIES TO train_inst.trainPpu_inst_trainDataIn;
  ARINC653::Sampling_Refresh_Period => 10ms APPLIES TO train_inst.TrainSpeedAccelCompute_inst_eoaIn;
  ARINC653::Sampling_Refresh_Period => 10ms APPLIES TO train_inst.TrainSpeedAccelCompute_inst_trainPositionForMauOut;
  ARINC653::Sampling_Refresh_Period => 10ms APPLIES TO railway_inst.TrainPositionsCorrelation_inst_trainPositionVobcForMauIn;
  ARINC653::Sampling_Refresh_Period => 10ms APPLIES TO railway_inst.EoaSending_inst_eoaForVobcOut;
  ARINC653::Sampling_Refresh_Period => 10ms APPLIES TO railway_inst.TrainSimu_inst_trainDataIn;
  ARINC653::Sampling_Refresh_Period => 10ms APPLIES TO railway_inst.TrainSimu_inst_trainDataOut;
END monoProc.impl;

PROCESSOR root
END root;

PROCESSOR IMPLEMENTATION root.impl
SUBCOMPONENTS
  VP_train_inst : VIRTUAL PROCESSOR VP_train.impl
  {
  	Scheduling_Protocol => (Round_Robin_Protocol);
  	Period => 600 Ms;
  };
  VP_railway_inst : VIRTUAL PROCESSOR VP_railway.impl
  {
  	Scheduling_Protocol => (Round_Robin_Protocol);
  	Period => 600 Ms;
  };
END root.impl;

MEMORY root_main_memory
PROPERTIES
  Memory_Size => 250000 Bytes;
  Base_Address => 16#2200#;
  Word_Size => 10000Bytes;
  ARINC653::Memory_Type => (Data_Memory,Code_Memory,IO_Memory);
--  Write_Time => [Fixed => 5 ns .. 5 ns; PerByte =>  5 ns .. 5 ns; ];
--  Read_Time => [Fixed => 5 ns .. 5 ns; PerByte =>  5 ns .. 5 ns; ];
END root_main_memory;

MEMORY IMPLEMENTATION root_main_memory.impl
END root_main_memory.impl;

VIRTUAL PROCESSOR VP_System_aadlKeywords
END VP_System_aadlKeywords;

VIRTUAL PROCESSOR IMPLEMENTATION VP_System_aadlKeywords.impl
PROPERTIES
  ARINC653::Partition_Identifier => 1;
  ARINC653::Partition_Name => "System";
  ARINC653::System_Partition => TRUE;
  Scheduling_Protocol => (Round_Robin_Protocol);
  POK::Additional_Features => (libc_stdio,console);
END VP_System_aadlKeywords.impl;

VIRTUAL PROCESSOR VP_train
END VP_train;

VIRTUAL PROCESSOR IMPLEMENTATION VP_train.impl
PROPERTIES
  ARINC653::Partition_Identifier => 2;
  ARINC653::Partition_Name => "train";
  ARINC653::System_Partition => FALSE;
  Scheduling_Protocol => (Round_Robin_Protocol);
  POK::Additional_Features => (libc_stdio,console);
END VP_train.impl;

VIRTUAL PROCESSOR VP_railway
END VP_railway;

VIRTUAL PROCESSOR IMPLEMENTATION VP_railway.impl
PROPERTIES
  ARINC653::Partition_Identifier => 3;
  ARINC653::Partition_Name => "railway";
  ARINC653::System_Partition => FALSE;
  Scheduling_Protocol => (Round_Robin_Protocol);
  POK::Additional_Features => (libc_stdio,console);
END VP_railway.impl;

PROCESS System_aadlKeywords
END System_aadlKeywords;

PROCESS IMPLEMENTATION System_aadlKeywords.impl
PROPERTIES
  Data_Size => 200KByte;
  Code_Size => 200KByte;
END System_aadlKeywords.impl;

PROCESS train
FEATURES
  TrainSpeedAccelCompute_inst_eoaIn : IN DATA PORT EndOfAuthority;
  TrainSpeedAccelCompute_inst_trainPositionForMauOut : OUT DATA PORT VobcData;
  trainPpu_inst_trainDataOut : OUT DATA PORT TrainData;
  trainPpu_inst_trainDataIn : IN DATA PORT TrainData;
END train;

PROCESS IMPLEMENTATION train.impl
SUBCOMPONENTS
  TrainPpu_odometerAcquisition : THREAD TrainPpu_odometerAcquisition_Thread.impl;
  TrainPpu_trainTraction : THREAD TrainPpu_trainTraction_Thread.impl;
  VobcTrainPositionEstimation_vobcTrainPositionEstimation : THREAD VobcTrainPositionEstimation_vobcTrainPositionEstimation_Thread.impl;
  TrainSpeedAccelCompute_trainSpeedAccelCompute : THREAD TrainSpeedAccelCompute_trainSpeedAccelCompute_Thread.impl;
CONNECTIONS
  PortCnx1 : PORT TrainPpu_odometerAcquisition.wheelAngleOut -> VobcTrainPositionEstimation_vobcTrainPositionEstimation.wheelAngleIn;
  PortCnx2 : PORT TrainPpu_trainTraction.additionalTrainPositionOffset -> VobcTrainPositionEstimation_vobcTrainPositionEstimation.additionalTrainPositionOffset;
  PortCnx3 : PORT VobcTrainPositionEstimation_vobcTrainPositionEstimation.trainPositionOut_F -> TrainSpeedAccelCompute_trainSpeedAccelCompute.trainPositionIn;
  PortCnx4 : PORT TrainSpeedAccelCompute_trainSpeedAccelCompute.tractionOut -> TrainPpu_trainTraction.tractionIn;
  PortCnx5 : PORT TrainSpeedAccelCompute_inst_eoaIn -> TrainSpeedAccelCompute_trainSpeedAccelCompute.eoaIn;
  PortCnx6 : PORT trainPpu_inst_trainDataIn -> TrainPpu_odometerAcquisition.trainDataIn;
  PortCnx7 : PORT trainPpu_inst_trainDataIn -> TrainPpu_trainTraction.trainDataIn;
  PortCnx8 : PORT TrainSpeedAccelCompute_trainSpeedAccelCompute.trainPositionForMauOut -> TrainSpeedAccelCompute_inst_trainPositionForMauOut;
  PortCnx9 : PORT TrainPpu_trainTraction.trainDataOut -> trainPpu_inst_trainDataOut;
PROPERTIES
  Data_Size => 200KByte;
  Code_Size => 200KByte;
  Dispatch_Protocol => Periodic APPLIES TO TrainPpu_odometerAcquisition;
  Priority => 1 APPLIES TO TrainPpu_odometerAcquisition;
  Period => 300ms APPLIES TO TrainPpu_odometerAcquisition;
  Data_Size => 40KByte APPLIES TO TrainPpu_odometerAcquisition;
  Stack_Size => 40KByte APPLIES TO TrainPpu_odometerAcquisition;
  Code_Size => 40KByte APPLIES TO TrainPpu_odometerAcquisition;
  Dispatch_Protocol => Periodic APPLIES TO TrainPpu_trainTraction;
  Priority => 1 APPLIES TO TrainPpu_trainTraction;
  Period => 300ms APPLIES TO TrainPpu_trainTraction;
  Data_Size => 40KByte APPLIES TO TrainPpu_trainTraction;
  Stack_Size => 40KByte APPLIES TO TrainPpu_trainTraction;
  Code_Size => 40KByte APPLIES TO TrainPpu_trainTraction;
  Dispatch_Protocol => Periodic APPLIES TO VobcTrainPositionEstimation_vobcTrainPositionEstimation;
  Priority => 2 APPLIES TO VobcTrainPositionEstimation_vobcTrainPositionEstimation;
  Period => 300ms APPLIES TO VobcTrainPositionEstimation_vobcTrainPositionEstimation;
  Data_Size => 40KByte APPLIES TO VobcTrainPositionEstimation_vobcTrainPositionEstimation;
  Stack_Size => 40KByte APPLIES TO VobcTrainPositionEstimation_vobcTrainPositionEstimation;
  Code_Size => 40KByte APPLIES TO VobcTrainPositionEstimation_vobcTrainPositionEstimation;
  Dispatch_Protocol => Periodic APPLIES TO TrainSpeedAccelCompute_trainSpeedAccelCompute;
  Priority => 2 APPLIES TO TrainSpeedAccelCompute_trainSpeedAccelCompute;
  Period => 300ms APPLIES TO TrainSpeedAccelCompute_trainSpeedAccelCompute;
  Data_Size => 40KByte APPLIES TO TrainSpeedAccelCompute_trainSpeedAccelCompute;
  Stack_Size => 40KByte APPLIES TO TrainSpeedAccelCompute_trainSpeedAccelCompute;
  Code_Size => 40KByte APPLIES TO TrainSpeedAccelCompute_trainSpeedAccelCompute;
END train.impl;

PROCESS railway
FEATURES
  EoaSending_inst_eoaForVobcOut : OUT DATA PORT EndOfAuthority;
  TrainPositionsCorrelation_inst_trainPositionVobcForMauIn : IN DATA PORT VobcData;
  TrainSimu_inst_trainDataIn : IN DATA PORT TrainData;
  TrainSimu_inst_trainDataOut : OUT DATA PORT TrainData;
END railway;

PROCESS IMPLEMENTATION railway.impl
SUBCOMPONENTS
  TrainPositionsCorrelation_trainPositionsCorrelation : THREAD TrainPositionsCorrelation_trainPositionsCorrelation_Thread.impl;
  ViuTrainPositionEstimation_viuTrainPositionEstimation : THREAD ViuTrainPositionEstimation_viuTrainPositionEstimation_Thread.impl;
  TrainSimu_trainSimulation : THREAD TrainSimu_trainSimulation_Thread.impl;
  TrainSimu_delayed_trainDataIn : THREAD TrainSimu_delayed_trainDataIn_Thread.impl;
CONNECTIONS
  PortCnx1 : PORT ViuTrainPositionEstimation_viuTrainPositionEstimation.trainPositionForMauOut -> TrainPositionsCorrelation_trainPositionsCorrelation.trainPositionViuForMauIn;
  PortCnx2 : PORT TrainSimu_delayed_trainDataIn.delayed_trainDataIn -> TrainSimu_trainSimulation.delayed_trainDataIn;
  PortCnx3 : PORT TrainSimu_trainSimulation.trackOut -> ViuTrainPositionEstimation_viuTrainPositionEstimation.trackIn;
  PortCnx4 : PORT TrainPositionsCorrelation_inst_trainPositionVobcForMauIn -> TrainPositionsCorrelation_trainPositionsCorrelation.trainPositionVobcForMauIn;
  PortCnx5 : PORT TrainSimu_inst_trainDataIn -> TrainSimu_delayed_trainDataIn.trainDataIn;
  PortCnx6 : PORT TrainSimu_trainSimulation.trainDataOut -> TrainSimu_inst_trainDataOut;
  PortCnx7 : PORT TrainPositionsCorrelation_trainPositionsCorrelation.eoAForVobcOut -> EoaSending_inst_eoaForVobcOut;
PROPERTIES
  Data_Size => 200KByte;
  Code_Size => 200KByte;
  Dispatch_Protocol => Periodic APPLIES TO TrainPositionsCorrelation_trainPositionsCorrelation;
  Priority => 3 APPLIES TO TrainPositionsCorrelation_trainPositionsCorrelation;
  Period => 600ms APPLIES TO TrainPositionsCorrelation_trainPositionsCorrelation;
  Data_Size => 40KByte APPLIES TO TrainPositionsCorrelation_trainPositionsCorrelation;
  Stack_Size => 40KByte APPLIES TO TrainPositionsCorrelation_trainPositionsCorrelation;
  Code_Size => 40KByte APPLIES TO TrainPositionsCorrelation_trainPositionsCorrelation;
  Dispatch_Protocol => Periodic APPLIES TO ViuTrainPositionEstimation_viuTrainPositionEstimation;
  Priority => 1 APPLIES TO ViuTrainPositionEstimation_viuTrainPositionEstimation;
  Period => 600ms APPLIES TO ViuTrainPositionEstimation_viuTrainPositionEstimation;
  Data_Size => 40KByte APPLIES TO ViuTrainPositionEstimation_viuTrainPositionEstimation;
  Stack_Size => 40KByte APPLIES TO ViuTrainPositionEstimation_viuTrainPositionEstimation;
  Code_Size => 40KByte APPLIES TO ViuTrainPositionEstimation_viuTrainPositionEstimation;
  Dispatch_Protocol => Periodic APPLIES TO TrainSimu_trainSimulation;
  Priority => 1 APPLIES TO TrainSimu_trainSimulation;
  Period => 600ms APPLIES TO TrainSimu_trainSimulation;
  Data_Size => 40KByte APPLIES TO TrainSimu_trainSimulation;
  Stack_Size => 40KByte APPLIES TO TrainSimu_trainSimulation;
  Code_Size => 40KByte APPLIES TO TrainSimu_trainSimulation;
  Dispatch_Protocol => Periodic APPLIES TO TrainSimu_delayed_trainDataIn;
  Priority => 1 APPLIES TO TrainSimu_delayed_trainDataIn;
  Period => 600ms APPLIES TO TrainSimu_delayed_trainDataIn;
  Data_Size => 40KByte APPLIES TO TrainSimu_delayed_trainDataIn;
  Stack_Size => 40KByte APPLIES TO TrainSimu_delayed_trainDataIn;
  Code_Size => 40KByte APPLIES TO TrainSimu_delayed_trainDataIn;
END railway.impl;

SUBPROGRAM TrainPpu_odometerAcquisition
FEATURES
  trainDataIn : IN PARAMETER TrainData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  odometerOut : OUT PARAMETER OdometerData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "TrainPpu_odometerAcquisition";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_trainPpu_subsystem_Implementations_TrainPpu_impl.h","business-code/cbtc_trainPpu_subsystem_Implementations_TrainPpu_impl.c", "business-code/VobcProcessing.c", "business-code/Tools.c");
END TrainPpu_odometerAcquisition;

SUBPROGRAM TrainPpu_trainTraction
FEATURES
  tractionIn : IN PARAMETER TractionData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainDataIn : IN PARAMETER TrainData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  additionalTrainPositionOffset : OUT PARAMETER TrainPositionOffset {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainDataOut : OUT PARAMETER TrainData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "TrainPpu_trainTraction";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_trainPpu_subsystem_Implementations_TrainPpu_impl.h","business-code/cbtc_trainPpu_subsystem_Implementations_TrainPpu_impl.c");
END TrainPpu_trainTraction;

SUBPROGRAM TrackPpu_cdvAcquisition
FEATURES
  trainDataIn : IN PARAMETER TrainData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  cdvOut : OUT PARAMETER CdvData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "TrackPpu_cdvAcquisition";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_trainPpu_subsystem_Implementations_TrackPpu_impl.h","business-code/cbtc_trainPpu_subsystem_Implementations_TrackPpu_impl.c");
END TrackPpu_cdvAcquisition;

SUBPROGRAM WheelAngleAcquisition_wheelAngleAcquisition
FEATURES
  odometerIn : IN PARAMETER OdometerData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  wheelAngleOut : OUT PARAMETER OdometerData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "WheelAngleAcquisition_wheelAngleAcquisition";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_vobc_subsystem_Implementations_WheelAngleAcquisition_impl.h","business-code/cbtc_vobc_subsystem_Implementations_WheelAngleAcquisition_impl.c");
END WheelAngleAcquisition_wheelAngleAcquisition;

SUBPROGRAM VobcTrainPositionEstimation_vobcTrainPositionEstimation
FEATURES
  wheelAngleIn : IN PARAMETER OdometerData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  delayed_additionalTrainPositionOffset : IN PARAMETER TrainPositionOffset {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainPositionOut : OUT PARAMETER VobcData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "VobcTrainPositionEstimation_vobcTrainPositionEstimation";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_vobc_subsystem_Implementations_VobcTrainPositionEstimation_impl.h","business-code/cbtc_vobc_subsystem_Implementations_VobcTrainPositionEstimation_impl.c");
END VobcTrainPositionEstimation_vobcTrainPositionEstimation;

SUBPROGRAM VobcTrainPositionEstimation_delayed_additionalTrainPositionOffset
FEATURES
  additionalTrainPositionOffset : IN PARAMETER TrainPositionOffset {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  delayed_additionalTrainPositionOffset : OUT PARAMETER TrainPositionOffset {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
ANNEX behavior_specification {**
  STATES
    s : INITIAL FINAL STATE;
  TRANSITIONS
    t : s -[  ]-> s {
    delayed_additionalTrainPositionOffset := additionalTrainPositionOffset
  };
**};

END VobcTrainPositionEstimation_delayed_additionalTrainPositionOffset;

SUBPROGRAM VobcTrainPositionSending_vobcTrainPositionSending
FEATURES
  trainPositionIn : IN PARAMETER VobcData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainPositionOut : OUT PARAMETER VobcData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "VobcTrainPositionSending_vobcTrainPositionSending";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_vobc_subsystem_Implementations_VobcTrainPositionSending_impl.h","business-code/cbtc_vobc_subsystem_Implementations_VobcTrainPositionSending_impl.c");
END VobcTrainPositionSending_vobcTrainPositionSending;

SUBPROGRAM TrainSpeedAccelCompute_trainSpeedAccelCompute
FEATURES
  eoaIn : IN PARAMETER EndOfAuthority {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainPositionIn : IN PARAMETER VobcData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainAccelOut : OUT PARAMETER TractionData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainPositionForMauOut : OUT PARAMETER VobcData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "TrainSpeedAccelCompute_trainSpeedAccelCompute";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_vobc_subsystem_Implementations_TrainSpeedAccelCompute_impl.h","business-code/cbtc_vobc_subsystem_Implementations_TrainSpeedAccelCompute_impl.c");
END TrainSpeedAccelCompute_trainSpeedAccelCompute;

SUBPROGRAM AccelerationSending_accelerationSending
FEATURES
  trainAccelIn : IN PARAMETER TractionData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  tractionOut : OUT PARAMETER TractionData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "AccelerationSending_accelerationSending";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_vobc_subsystem_Implementations_AccelerationSending_impl.h","business-code/cbtc_vobc_subsystem_Implementations_AccelerationSending_impl.c");
END AccelerationSending_accelerationSending;

SUBPROGRAM TrainPositionsCorrelation_trainPositionsCorrelation
FEATURES
  trainPositionVobcForMauIn : IN PARAMETER VobcData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainPositionViuForMauIn : IN PARAMETER ViuData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  delayed_trainPositionMauOut : OUT PARAMETER TrainPosition {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "TrainPositionsCorrelation_trainPositionsCorrelation";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_mau_subsystem_Implementations_TrainPositionsCorrelation_impl.h","business-code/cbtc_mau_subsystem_Implementations_TrainPositionsCorrelation_impl.c", "business-code/Tools.c");
END TrainPositionsCorrelation_trainPositionsCorrelation;

SUBPROGRAM TrainPositionsCorrelation_store_trainPositionMauOut
FEATURES
  delayed_trainPositionMauOut : IN PARAMETER TrainPosition {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainPositionMauOut : OUT PARAMETER TrainPosition {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
ANNEX behavior_specification {**
  STATES
    s : INITIAL FINAL STATE;
  TRANSITIONS
    t : s -[  ]-> s {
    trainPositionMauOut := delayed_trainPositionMauOut
  };
**};

END TrainPositionsCorrelation_store_trainPositionMauOut;

SUBPROGRAM EndOfAuthorityComputation_endOfAuthorityComputation
FEATURES
  trainPositionIn : IN PARAMETER TrainPosition {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  eoAOutput : OUT PARAMETER EndOfAuthority {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "EndOfAuthorityComputation_endOfAuthorityComputation";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_mau_subsystem_Implementations_EndOfAuthorityComputation_impl.h","business-code/cbtc_mau_subsystem_Implementations_EndOfAuthorityComputation_impl.c");
END EndOfAuthorityComputation_endOfAuthorityComputation;

SUBPROGRAM EoaSending_eoaSending
FEATURES
  eoAInput : IN PARAMETER EndOfAuthority {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  eoaForVobcOut : OUT PARAMETER EndOfAuthority {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "EoaSending_eoaSending";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_mau_subsystem_Implementations_EoaSending_impl.h","business-code/cbtc_mau_subsystem_Implementations_EoaSending_impl.c");
END EoaSending_eoaSending;

SUBPROGRAM TrackAcquisition_trackAcquisition
FEATURES
  cdvIn : IN PARAMETER CdvData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trackOut : OUT PARAMETER CdvData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "TrackAcquisition_trackAcquisition";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_viu_subsystem_Implementations_TrackAcquisition_impl.h","business-code/cbtc_viu_subsystem_Implementations_TrackAcquisition_impl.c");
END TrackAcquisition_trackAcquisition;

SUBPROGRAM ViuTrainPositionEstimation_viuTrainPositionEstimation
FEATURES
  trackIn : IN PARAMETER CdvData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainPositionOut : OUT PARAMETER ViuData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "ViuTrainPositionEstimation_viuTrainPositionEstimation";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_viu_subsystem_Implementations_ViuTrainPositionEstimation_impl.h","business-code/cbtc_viu_subsystem_Implementations_ViuTrainPositionEstimation_impl.c");
END ViuTrainPositionEstimation_viuTrainPositionEstimation;

SUBPROGRAM ViuTrainPositionSending_viuTrainPositionSending
FEATURES
  trainPositionIn : IN PARAMETER ViuData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainPositionForMauOut : OUT PARAMETER ViuData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "ViuTrainPositionSending_viuTrainPositionSending";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_viu_subsystem_Implementations_ViuTrainPositionSending_impl.h","business-code/cbtc_viu_subsystem_Implementations_ViuTrainPositionSending_impl.c");
END ViuTrainPositionSending_viuTrainPositionSending;

SUBPROGRAM TrainSimu_trainSimulation
FEATURES
  delayed_trainDataIn : IN PARAMETER TrainData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  trainDataOut : OUT PARAMETER TrainData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
PROPERTIES
  Source_Name => "TrainSimu_trainSimulation";
  Source_Language => (C);
  Source_Text => ("business-code/cbtc_cbtc_subsystem_Implementations_TrainSimu_impl.h","business-code/cbtc_cbtc_subsystem_Implementations_TrainSimu_impl.c");
END TrainSimu_trainSimulation;

SUBPROGRAM TrainSimu_delayed_trainDataIn
FEATURES
  trainDataIn : IN PARAMETER TrainData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
  delayed_trainDataIn : OUT PARAMETER TrainData {
    Generation_Properties::Parameter_Usage => By_Reference;
  };
ANNEX behavior_specification {**
  STATES
    s : INITIAL FINAL STATE;
  TRANSITIONS
    t : s -[  ]-> s {
    delayed_trainDataIn := trainDataIn
  };
**};
END TrainSimu_delayed_trainDataIn;

THREAD TrainPpu_odometerAcquisition_Thread
FEATURES
  trainDataIn : IN DATA PORT TrainData;
  wheelAngleOut : OUT DATA PORT OdometerData;
END TrainPpu_odometerAcquisition_Thread;

THREAD IMPLEMENTATION TrainPpu_odometerAcquisition_Thread.impl
SUBCOMPONENTS
  TrainPpu_odometerAcquisition : SUBPROGRAM TrainPpu_odometerAcquisition;
  WheelAngleAcquisition_wheelAngleAcquisition : SUBPROGRAM WheelAngleAcquisition_wheelAngleAcquisition;
ANNEX behavior_specification {**
  VARIABLES
    odometerOut : OdometerData;
    odometerIn : OdometerData;
  STATES
    switch : INITIAL COMPLETE STATE;
  TRANSITIONS
    unnamed_B1 : switch -[ ON DISPATCH ]-> switch {
    IF ( trainDataIn'FRESH )
    TrainPpu_odometerAcquisition ! (trainDataIn,odometerOut);
    odometerIn := odometerOut;
    WheelAngleAcquisition_wheelAngleAcquisition ! (odometerIn,wheelAngleOut)
    END IF
  };
**};
END TrainPpu_odometerAcquisition_Thread.impl;

THREAD TrainPpu_trainTraction_Thread
FEATURES
  tractionIn : IN DATA PORT TractionData;
  trainDataIn : IN DATA PORT TrainData;
  additionalTrainPositionOffset : OUT DATA PORT TrainPositionOffset;
  trainDataOut : OUT DATA PORT TrainData;
END TrainPpu_trainTraction_Thread;

THREAD IMPLEMENTATION TrainPpu_trainTraction_Thread.impl
SUBCOMPONENTS
  TrainPpu_trainTraction : SUBPROGRAM TrainPpu_trainTraction;
ANNEX behavior_specification {**
  STATES
    switch : INITIAL COMPLETE STATE;
  TRANSITIONS
    unnamed_B1 : switch -[ ON DISPATCH ]-> switch {
    IF ( tractionIn'FRESH AND trainDataIn'FRESH )
    TrainPpu_trainTraction ! (tractionIn,trainDataIn,additionalTrainPositionOffset,trainDataOut)
    END IF
  };
**};
END TrainPpu_trainTraction_Thread.impl;

THREAD VobcTrainPositionEstimation_vobcTrainPositionEstimation_Thread
FEATURES
  additionalTrainPositionOffset : IN DATA PORT TrainPositionOffset;
  wheelAngleIn : IN DATA PORT OdometerData;
  trainPositionOut_F : OUT DATA PORT VobcData;
END VobcTrainPositionEstimation_vobcTrainPositionEstimation_Thread;

THREAD IMPLEMENTATION VobcTrainPositionEstimation_vobcTrainPositionEstimation_Thread.impl
SUBCOMPONENTS
  VobcTrainPositionEstimation_delayed_additionalTrainPositionOffset : SUBPROGRAM VobcTrainPositionEstimation_delayed_additionalTrainPositionOffset;
  VobcTrainPositionEstimation_vobcTrainPositionEstimation : SUBPROGRAM VobcTrainPositionEstimation_vobcTrainPositionEstimation;
  VobcTrainPositionSending_vobcTrainPositionSending : SUBPROGRAM VobcTrainPositionSending_vobcTrainPositionSending;
ANNEX behavior_specification {**
  VARIABLES
    delayed_additionalTrainPositionOffset : TrainPositionOffset;
    trainPositionOut : VobcData;
    trainPositionIn : VobcData;
  STATES
    switch : INITIAL COMPLETE STATE;
  TRANSITIONS
    unnamed_B1 : switch -[ ON DISPATCH ]-> switch {
    VobcTrainPositionEstimation_delayed_additionalTrainPositionOffset ! (additionalTrainPositionOffset,delayed_additionalTrainPositionOffset);
    IF ( wheelAngleIn'FRESH )
    VobcTrainPositionEstimation_vobcTrainPositionEstimation ! (wheelAngleIn,delayed_additionalTrainPositionOffset,trainPositionOut);
    trainPositionIn := trainPositionOut;
    VobcTrainPositionSending_vobcTrainPositionSending ! (trainPositionIn,trainPositionOut_F)
    END IF
  };
**};
END VobcTrainPositionEstimation_vobcTrainPositionEstimation_Thread.impl;

THREAD TrainSpeedAccelCompute_trainSpeedAccelCompute_Thread
FEATURES
  eoaIn : IN DATA PORT EndOfAuthority;
  trainPositionIn : IN DATA PORT VobcData;
  trainPositionForMauOut : OUT DATA PORT VobcData;
  tractionOut : OUT DATA PORT TractionData;
END TrainSpeedAccelCompute_trainSpeedAccelCompute_Thread;

THREAD IMPLEMENTATION TrainSpeedAccelCompute_trainSpeedAccelCompute_Thread.impl
SUBCOMPONENTS
  TrainSpeedAccelCompute_trainSpeedAccelCompute : SUBPROGRAM TrainSpeedAccelCompute_trainSpeedAccelCompute;
  AccelerationSending_accelerationSending : SUBPROGRAM AccelerationSending_accelerationSending;
ANNEX behavior_specification {**
  VARIABLES
    trainAccelOut : TractionData;
    trainAccelIn : TractionData;
  STATES
    switch : INITIAL COMPLETE STATE;
  TRANSITIONS
    unnamed_B1 : switch -[ ON DISPATCH ]-> switch {
    IF ( eoaIn'FRESH AND trainPositionIn'FRESH )
    TrainSpeedAccelCompute_trainSpeedAccelCompute ! (eoaIn,trainPositionIn,trainAccelOut,trainPositionForMauOut);
    trainAccelIn := trainAccelOut;
    AccelerationSending_accelerationSending ! (trainAccelIn,tractionOut)
    END IF
  };
**};
END TrainSpeedAccelCompute_trainSpeedAccelCompute_Thread.impl;

THREAD TrainPositionsCorrelation_trainPositionsCorrelation_Thread
FEATURES
  trainPositionVobcForMauIn : IN DATA PORT VobcData;
  trainPositionViuForMauIn : IN DATA PORT ViuData;
  eoaForVobcOut : OUT DATA PORT EndOfAuthority;
END TrainPositionsCorrelation_trainPositionsCorrelation_Thread;

THREAD IMPLEMENTATION TrainPositionsCorrelation_trainPositionsCorrelation_Thread.impl
SUBCOMPONENTS
  TrainPositionsCorrelation_trainPositionsCorrelation : SUBPROGRAM TrainPositionsCorrelation_trainPositionsCorrelation;
  TrainPositionsCorrelation_store_trainPositionMauOut : SUBPROGRAM TrainPositionsCorrelation_store_trainPositionMauOut;
  EndOfAuthorityComputation_endOfAuthorityComputation : SUBPROGRAM EndOfAuthorityComputation_endOfAuthorityComputation;
  EoaSending_eoaSending : SUBPROGRAM EoaSending_eoaSending;
ANNEX behavior_specification {**
  VARIABLES
    delayed_trainPositionMauOut : TrainPosition;
    trainPositionMauOut : TrainPosition;
    trainPositionIn : TrainPosition;
    eoAOutput : EndOfAuthority;
    eoAInput : EndOfAuthority;
  STATES
    switch : INITIAL COMPLETE STATE;
  TRANSITIONS
    unnamed_B1 : switch -[ ON DISPATCH ]-> switch {
    IF ( trainPositionVobcForMauIn'FRESH AND trainPositionViuForMauIn'FRESH )
    TrainPositionsCorrelation_trainPositionsCorrelation ! (trainPositionVobcForMauIn,trainPositionViuForMauIn,delayed_trainPositionMauOut);
    TrainPositionsCorrelation_store_trainPositionMauOut ! (delayed_trainPositionMauOut,trainPositionMauOut);
    trainPositionIn := trainPositionMauOut;
    EndOfAuthorityComputation_endOfAuthorityComputation ! (trainPositionIn,eoAOutput);
    eoAInput := eoAOutput;
    EoaSending_eoaSending ! (eoAInput,eoaForVobcOut)
    END IF
  };
**};

END TrainPositionsCorrelation_trainPositionsCorrelation_Thread.impl;

THREAD ViuTrainPositionEstimation_viuTrainPositionEstimation_Thread
FEATURES
  trackIn : IN DATA PORT CdvData;
  trainPositionForMauOut : OUT DATA PORT ViuData;
END ViuTrainPositionEstimation_viuTrainPositionEstimation_Thread;

THREAD IMPLEMENTATION ViuTrainPositionEstimation_viuTrainPositionEstimation_Thread.impl
SUBCOMPONENTS
  ViuTrainPositionEstimation_viuTrainPositionEstimation : SUBPROGRAM ViuTrainPositionEstimation_viuTrainPositionEstimation;
  ViuTrainPositionSending_viuTrainPositionSending : SUBPROGRAM ViuTrainPositionSending_viuTrainPositionSending;
ANNEX behavior_specification {**
  VARIABLES
    trainPositionOut : ViuData;
    trainPositionIn : ViuData;
  STATES
    switch : INITIAL COMPLETE STATE;
  TRANSITIONS
    unnamed_B1 : switch -[ ON DISPATCH ]-> switch {
    IF ( trackIn'FRESH )
    ViuTrainPositionEstimation_viuTrainPositionEstimation ! (trackIn,trainPositionOut);
    trainPositionIn := trainPositionOut;
    ViuTrainPositionSending_viuTrainPositionSending ! (trainPositionIn,trainPositionForMauOut)
    END IF
  };
**};

END ViuTrainPositionEstimation_viuTrainPositionEstimation_Thread.impl;

THREAD TrainSimu_trainSimulation_Thread
FEATURES
  delayed_trainDataIn : IN DATA PORT TrainData;
  trainDataOut : OUT DATA PORT TrainData;
  trackOut : OUT DATA PORT CdvData;
END TrainSimu_trainSimulation_Thread;

THREAD IMPLEMENTATION TrainSimu_trainSimulation_Thread.impl
SUBCOMPONENTS
  TrainSimu_trainSimulation : SUBPROGRAM TrainSimu_trainSimulation;
  TrackPpu_cdvAcquisition : SUBPROGRAM TrackPpu_cdvAcquisition;
  TrackAcquisition_trackAcquisition : SUBPROGRAM TrackAcquisition_trackAcquisition;
ANNEX behavior_specification {**
  VARIABLES
    trainDataIn : TrainData;
    cdvOut : CdvData;
    cdvIn : CdvData;
  STATES
    switch : INITIAL COMPLETE STATE;
  TRANSITIONS
    unnamed_B1 : switch -[ ON DISPATCH ]-> switch {
    TrainSimu_trainSimulation ! (delayed_trainDataIn,trainDataOut);
    trainDataOut := trainDataIn;
    TrackPpu_cdvAcquisition ! (trainDataIn,cdvOut);
    cdvIn := cdvOut;
    TrackAcquisition_trackAcquisition ! (cdvIn,trackOut)
  };
**};

END TrainSimu_trainSimulation_Thread.impl;

THREAD TrainSimu_delayed_trainDataIn_Thread
FEATURES
  trainDataIn : IN DATA PORT TrainData;
  delayed_trainDataIn : OUT DATA PORT TrainData;
END TrainSimu_delayed_trainDataIn_Thread;

THREAD IMPLEMENTATION TrainSimu_delayed_trainDataIn_Thread.impl
SUBCOMPONENTS
  TrainSimu_delayed_trainDataIn : SUBPROGRAM TrainSimu_delayed_trainDataIn;
ANNEX behavior_specification {**
  STATES
    switch : INITIAL COMPLETE STATE;
  TRANSITIONS
    unnamed_B1 : switch -[ ON DISPATCH ]-> switch {
    TrainSimu_delayed_trainDataIn ! (trainDataIn,delayed_trainDataIn)
  };
**};

END TrainSimu_delayed_trainDataIn_Thread.impl;

END cbtc;

