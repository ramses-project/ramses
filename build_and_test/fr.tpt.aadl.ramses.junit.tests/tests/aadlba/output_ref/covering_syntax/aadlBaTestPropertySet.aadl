property set AadlBaTestPropertySet is
  rangeType: type range of aadlinteger  units Time_Units;
  enumType: type  enumeration (zero, one, two, three, four, five, six, seven, eight, nine);
  simpleRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  );
  complexRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  rec: AadlBaTestPropertySet::simpleRecordType;
  listRec: list of simpleRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  );
  ;
  );
  aValue: aadlinteger  => 28 applies to (data,subprogram,thread,system);
  aSimpleValue: aadlinteger  applies to (data,data port,subprogram,thread,system);
  aSimpleValueDefined: aadlinteger  => 20 applies to (data,subprogram,thread,system);
  aRange: AadlBaTestPropertySet::rangeType applies to (data,subprogram,thread,system);
  aRangeDefined: AadlBaTestPropertySet::rangeType => 0 sec .. 99 sec applies to (data,subprogram,thread,system);
  aEnum: AadlBaTestPropertySet::enumType applies to (data,subprogram,thread,system);
  aEnumDefined: AadlBaTestPropertySet::enumType => nine applies to (data,subprogram,thread,system);
  aSimpleList: list of aadlstring  applies to (data,subprogram,thread,system);
  aSimpleListDefined: list of aadlstring  => ("hello", "hi", "good day") applies to (data,subprogram,thread,system);
  aSimpleRecord: AadlBaTestPropertySet::simpleRecordType applies to (data,subprogram,thread,system);
  aSimpleRecordDefined: AadlBaTestPropertySet::simpleRecordType => [
    bool=> true;
    int=> 40;
  ] applies to (data,subprogram,thread,system);
  aComplexRecord: AadlBaTestPropertySet::complexRecordType applies to (data,subprogram,thread,system);
  aComplexRecordDefined: AadlBaTestPropertySet::complexRecordType => [
    bool=> true;
    int=> 60;
    rec=> AadlBaTestPropertySet::aSimpleRecordDefined;
    listRec=> (AadlBaTestPropertySet::aSimpleRecordDefined);
  ] applies to (data,subprogram,thread,system);
  aComplexList: list of complexRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  rec: AadlBaTestPropertySet::simpleRecordType;
  listRec: list of simpleRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  );
  ;
  );
   applies to (data,subprogram,thread,system);
  aComplexListDefined: list of complexRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  rec: AadlBaTestPropertySet::simpleRecordType;
  listRec: list of simpleRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  );
  ;
  );
   => (AadlBaTestPropertySet::aComplexRecordDefined) applies to (data,subprogram,thread,system);
  aComplexListOfList: list of list of complexRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  rec: AadlBaTestPropertySet::simpleRecordType;
  listRec: list of simpleRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  );
  ;
  );
   applies to (data,subprogram,thread,system);
  aComplexListOfListDefined: list of list of complexRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  rec: AadlBaTestPropertySet::simpleRecordType;
  listRec: list of simpleRecordType: type record (
  bool: aadlboolean ;
  int: aadlinteger ;
  );
  ;
  );
   => ((AadlBaTestPropertySet::aComplexRecordDefined)) applies to (data,subprogram,thread,system);
  aConstant: constant aadlinteger  => 28;
  aIntegerConstant: constant aadlinteger  => 42;
  aNegativeIntegerConstant: constant aadlinteger  => -42;
  aFloatConstant: constant aadlreal  => 42.1;
  aStringConstant: constant aadlstring  => "hello world";
  aBooleanConstant: constant aadlboolean  => true;
end AadlBaTestPropertySet;
