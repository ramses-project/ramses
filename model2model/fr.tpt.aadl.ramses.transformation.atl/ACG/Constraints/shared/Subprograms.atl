--
-- AADL-RAMSES
-- 
-- Copyright Â© 2012 TELECOM ParisTech and CNRS
-- 
-- TELECOM ParisTech/LTCI
-- 
-- Authors: see AUTHORS
-- 
-- This program is free software: you can redistribute it and/or modify 
-- it under the terms of the Eclipse Public License as published by Eclipse,
-- either version 1.0 of the License, or (at your option) any later version.
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-- Eclipse Public License for more details.
-- You should have received a copy of the Eclipse Public License
-- along with this program.  If not, see 
-- http://www.eclipse.org/org/documents/epl-v10.php
--

-- @nsURI AADLI=http://aadl.info/AADL/2.0/instance
-- @nsURI AADLBA=/fr.tpt.aadl.annex.behavior/model/aadlba.ecore
-- @atlcompiler emftvm

module Subprograms;
create OUT : CV 	from 		IN : AADLI;

abstract rule check_SubprogramCall
{
	from
	  obj: AADLI!SubprogramCall
	to
	  err: CV!Error
	  (
	  	object <:= obj
	  )
}

-- @extends check_SubprogramCall
rule check_HasSourceCode
{
	from
	  obj: AADLI!SubprogramCall
	  (not obj.hasSourceCode())
	to
	  err: CV!Error
	  (
	  	message <- 'Called subprograms must have a behavior annex '+
		'or reference existing source code (Source_Name and Source_Text properties)'
	  )
}

-- @extends check_HasSourceCode
rule check_HasHeaderInSourceCode
{
	from
		obj: AADLI!SubprogramCall
		(
			let spg: AADLBA!SubprogramClassifier = obj.getSubprogramClassifier()
			in
			spg.referenceSourceCode()
			and
			not spg.hasHeaderInSourceCode()	
		)
	to
		err: CV!Error
	  (
	  	message <- 'In ' + obj.name + ', called subprograms must have a behavior annex '+
		'or reference existing source code (Source_Name and Source_Text properties)'
	  )
}

helper context AADLI!SubprogramCall def: hasSourceCode(): Boolean =
	let spg: AADLBA!SubprogramClassifier = self.getSubprogramClassifier()
	in
	spg.hasBehaviorAnnex()
	or
	spg.referenceSourceCode()
	or
		if(spg.ownedExtension.oclIsUndefined()) then
			false
		else
			spg.ownedExtension.extended.hasSourceCode()
		endif
;

helper context AADLI!SubprogramClassifier def: referenceSourceCode() : Boolean =
	self.hasProperty('Source_Text') and self.hasProperty('Source_Name')
;

helper context AADLI!SubprogramSubcomponent def: referenceSourceCode() : Boolean =
	self.subcomponentType.referenceSourceCode()
;

helper context AADLI!SubprogramClassifier def: hasBehaviorAnnex() : Boolean =
	self.ownedAnnexSubclause->exists(e | e.name = 'behavior_specification')
;

helper context AADLI!SubprogramSubcomponent def: hasBehaviorAnnex() : Boolean =
	self.subcomponentType.hasBehaviorAnnex()
;
