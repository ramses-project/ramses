--
-- AADL-RAMSES
-- 
-- Copyright Â© 2012 TELECOM ParisTech and CNRS
-- 
-- TELECOM ParisTech/LTCI
-- 
-- Authors: see AUTHORS
-- 
-- This program is free software: you can redistribute it and/or modify 
-- it under the terms of the Eclipse Public License as published by Eclipse,
-- either version 1.0 of the License, or (at your option) any later version.
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
-- Eclipse Public License for more details.
-- You should have received a copy of the Eclipse Public License
-- along with this program.  If not, see 
-- http://www.eclipse.org/org/documents/epl-v10.php
--


module CopyElementHolders;
create OUT : AADLBA 	from 	IN : AADLBA,
								HOOKS: ATLHOOKS;

lazy rule copySubprogramAccessHolder
{
	from
		src_SubprogramAccessHolder: AADLBA!SubprogramAccessHolder
	to
		target_SubprogramAccessHolder: AADLBA!SubprogramAccessHolder
		(
			element<-src_SubprogramAccessHolder.element	
		)
	do
	{
		target_SubprogramAccessHolder;
	}
}

lazy rule copyEventPortHolder
{
	from
		src_EventPortHolder: AADLBA!EventPortHolder
	to
		target_EventPortHolder: AADLBA!EventPortHolder
		(
			element<-src_EventPortHolder.element	
		)
	do
	{
		target_EventPortHolder;
	}
}

lazy rule copyEventDataPortHolder
{
	from
		src_EventDataPortHolder:AADLBA!EventDataPortHolder
	to
		target_EventDataPortHolder: AADLBA!EventDataPortHolder
		(
			element<-src_EventDataPortHolder.element	
		)
	do
	{
		target_EventDataPortHolder;
	}
}

lazy rule copyDataPortHolder
{
	from
		src_DataPortHolder:AADLBA!DataPortHolder
	to
		target_DataPortHolder: AADLBA!DataPortHolder
		(
			element<-src_DataPortHolder.element	
		)
	do
	{
		target_DataPortHolder;
	}
}

lazy rule copyCalledSubprogramHolder
{
	from
		src_CalledSubprogramHolder:AADLBA!CalledSubprogramHolder
	to
		target_CalledSubprogramHolder:AADLBA!CalledSubprogramHolder
		(
			element<-src_CalledSubprogramHolder.element	
		)
	do
	{
		target_CalledSubprogramHolder;
	}
}

lazy rule copyDataAccessHolder
{
	from
		src_DataAccessHolder:AADLBA!DataAccessHolder
	to
		target_DataAccessHolder:AADLBA!DataAccessHolder
		(
			element<-src_DataAccessHolder.element	
		)
	do
	{
		target_DataAccessHolder;
	}
}