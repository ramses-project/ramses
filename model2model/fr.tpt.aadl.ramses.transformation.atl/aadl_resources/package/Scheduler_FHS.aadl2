package Scheduler_FHS
public

with Data_Model;
with Base_Types;

with Scheduler_Runtime;
with Scheduler_Interfaces;
with Scheduler_Constants;
	
system scheduler_instance
end scheduler_instance;

system implementation scheduler_instance.impl
subcomponents
  sched_space : process scheduler_space.impl;
end scheduler_instance.impl;

process scheduler_space
features
  complete 		  : in event port[];
  suspend         : in event port[];
  execute         : out event port[];  
end scheduler_space;

process implementation scheduler_space.impl
subcomponents
  sched_thread : thread scheduler_thread.impl;
connections
  a1 : port complete 			 -> sched_thread.complete; 
  a2 : port suspend  			 -> sched_thread.suspend;
  a3 : port sched_thread.execute -> execute;
end scheduler_space.impl;

thread scheduler_thread
features
  complete 		  : in event port[];
  suspend         : in event port[];
  execute         : out event port[];
end scheduler_thread;

thread implementation scheduler_thread.impl
subcomponents
  Behavior 		  : subprogram scheduler.impl;
  
  Election 		  : subprogram Scheduler_Interfaces::Task_Election;
  FlushPorts      : subprogram Scheduler_Interfaces::Task_Ports_Flushing;
  OutOfBudget     : subprogram Scheduler_Interfaces::Out_Of_Budget_Wrapper;
  
  InternalControl : data Scheduler_Runtime::Scheduler_Internal_Control.impl;
  TasksInfo       : data Scheduler_Runtime::Scheduling_Struct.impl;
  
  QTick			  : data Base_Types::Integer { Data_Model::Initial_Value => ("0"); };
connections
  a1 : subprogram access Election 		-> Behavior.Election;
  a2 : subprogram access FlushPorts		-> Behavior.FlushPorts;
  a3 : subprogram access OutOfBudget	-> Behavior.OutOfBudgetWrapper;
  
  a4 : data access InternalControl		-> Behavior.InternalControl;
  a5 : data access TasksInfo			-> Behavior.TasksInfo;
  a6 : data access QTick				-> Behavior.QTick;
end scheduler_thread.impl;

subprogram scheduler
features
  Election        		: requires subprogram access Scheduler_Interfaces::Task_Election;
  FlushPorts      		: requires subprogram access Scheduler_Interfaces::Task_Ports_Flushing;
  OutOfBudgetWrapper   	: requires subprogram access Scheduler_Interfaces::Out_Of_Budget_Wrapper;
  
  InternalControl 		: requires data access Scheduler_Runtime::Scheduler_Internal_Control.impl;
  TasksInfo       		: requires data access Scheduler_Runtime::Scheduling_Struct.impl;
   
  QTick			  		: requires data access Base_Types::Integer;
end scheduler;



subprogram implementation scheduler.impl
subcomponents
  t0 : data Base_Types::Integer;
  t1 : data Base_Types::Integer;
  PreviousElected : data Base_Types::Integer { Data_Model::Initial_Value => ("-1"); };
end scheduler.impl;

subprogram Thread_Call
features
  ThreadIndex  				: in parameter Base_Types::Integer;
end Thread_Call;

subprogram Scheduler_Call extends sub_scheduler
features
  SchedulerIndex			: in parameter Base_Types::Integer;
end Scheduler_Call;

subprogram root_scheduler extends scheduler
features
  SchedulerCall : requires subprogram access Scheduler_Call;
end root_scheduler;

subprogram sub_scheduler extends scheduler
features
  TimeBeforeInterruption : in parameter Base_Types::Integer;
  UsedCapacity			 : in out parameter Base_Types::Integer;
  CallUsedCapacity		 : out parameter Base_Types::Integer;
end sub_scheduler;

subprogram node_scheduler extends sub_scheduler
features
  SchedulerCall 		 : requires subprogram access Scheduler_Call;
end node_scheduler;

subprogram leaf_scheduler extends sub_scheduler
features
  ThreadCall 			 : requires subprogram access Thread_Call;
end leaf_scheduler;



end Scheduler_FHS;