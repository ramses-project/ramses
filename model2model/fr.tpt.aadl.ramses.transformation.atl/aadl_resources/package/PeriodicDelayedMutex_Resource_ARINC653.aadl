package PeriodicDelayedMutex_Resource_ARINC653
public

with PeriodicDelayedMutex_runtime;
with ARINC653_runtime;

data t_aadl_thread_data_queue
extends PeriodicDelayedMutex_runtime::t_aadl_thread_data_queue
end t_aadl_thread_data_queue;

data implementation t_aadl_thread_data_queue.arinc653
extends PeriodicDelayedMutex_runtime::t_aadl_thread_data_queue.impl
(t_lock => data ARINC653_runtime::Semaphore_Id_Type)
end t_aadl_thread_data_queue.arinc653;

subprogram Get_Resource 
extends PeriodicDelayedMutex_runtime::Get_Resource
(t_port => data t_aadl_thread_data_queue.arinc653)
end Get_Resource;

subprogram Release_Resource 
extends PeriodicDelayedMutex_runtime::Release_Resource
(t_port => data t_aadl_thread_data_queue.arinc653)
end Release_Resource;

subprogram implementation Get_Resource.arinc653
subcomponents
  TIME_OUT : data ARINC653_runtime::SYSTEM_TIME_TYPE;
  RET : data ARINC653_runtime::RETURN_CODE_TYPE;
annex behavior_specification {**
	states
	  s : initial final state;
	transitions
	  s-[]->s {
	  	ARINC653_runtime::Wait_Semaphore!(PortVariable.Lock, TIME_OUT, RET)
	  };
**};
end Get_Resource.arinc653;

subprogram implementation Release_Resource.arinc653
subcomponents
  RET : data ARINC653_runtime::RETURN_CODE_TYPE;
annex behavior_specification {**
	states
	  s : initial final state;
	transitions
	  s-[]->s {
	  	ARINC653_runtime::Signal_Semaphore!(PortVariable.Lock, RET)
	  };
**};
end Release_Resource.arinc653;

end PeriodicDelayedMutex_Resource_ARINC653;