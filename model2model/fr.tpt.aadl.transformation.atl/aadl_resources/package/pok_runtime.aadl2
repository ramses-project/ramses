package pok_runtime
public

data Blackboard_Name_Type
properties
  Programming_Properties::Source_Name => "BLACKBOARD_NAME_TYPE";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Blackboard_Name_Type;

data Blackboard_Id_Type
properties
  Programming_Properties::Source_Name => "BLACKBOARD_ID_TYPE";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Blackboard_Id_Type;

data Message_Size_Type
properties
  Programming_Properties::Source_Name => "MESSAGE_SIZE_TYPE";
  Programming_Properties::Source_Text => ("arinc653/types.h");
end Message_Size_Type;

data Return_Code_Type
properties
  Programming_Properties::Source_Name => "RETURN_CODE_TYPE";
  Programming_Properties::Source_Text => ("arinc653/types.h");
end Return_Code_Type;

data Message_Addr_Type
properties
  Programming_Properties::Source_Name => "MESSAGE_ADDR_TYPE";
  Programming_Properties::Source_Text => ("arinc653/types.h");
end Message_Addr_Type;

data System_Time_Type
properties
  Programming_Properties::Source_Name => "SYSTEM_TIME_TYPE";
  Programming_Properties::Source_Text => ("arinc653/types.h");
end System_Time_Type;

subprogram Periodic_Wait
features
  RETURN_CODE: out parameter RETURN_CODE_TYPE ;
properties
  Programming_Properties::Source_Name => "PERIODIC_WAIT";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Periodic_Wait;

data Blackboard_Status_Type
properties
  Programming_Properties::Source_Name => "BLACKBOARD_STATUS_TYPE";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Blackboard_Status_Type;

subprogram Create_Blackboard
features
  BLACKBOARD_NAME: in parameter BLACKBOARD_NAME_TYPE ;
  MAX_MESSAGE_SIZE: in parameter MESSAGE_SIZE_TYPE ;
  BLACKBOARD_ID: in out parameter BLACKBOARD_ID_TYPE ;
  RETURN_CODE: out parameter RETURN_CODE_TYPE ;
properties
  Programming_Properties::Source_Name => "Create_Blackboard";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Create_Blackboard;
       
subprogram Display_Blackboard
features
   BLACKBOARD_ID: requires data access BLACKBOARD_ID_TYPE {Access_Right=>read_only;};
   MESSAGE_ADDR: in out parameter MESSAGE_ADDR_TYPE ;
   LENGTH: in parameter MESSAGE_SIZE_TYPE ;
   RETURN_CODE: out parameter RETURN_CODE_TYPE ;
properties
  Programming_Properties::Source_Name => "DISPLAY_BLACKBOARD";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Display_Blackboard;

subprogram Read_Blackboard
features
  BLACKBOARD_ID: requires data access BLACKBOARD_ID_TYPE {Access_Right=>read_only;};
  TIME_OUT: in parameter SYSTEM_TIME_TYPE ;
  MESSAGE_ADDR: out parameter MESSAGE_ADDR_TYPE ;
  LENGTH: out parameter MESSAGE_SIZE_TYPE ;
  RETURN_CODE: out parameter RETURN_CODE_TYPE ;
properties
  Programming_Properties::Source_Name => "READ_BLACKBOARD";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Read_Blackboard;

subprogram Clear_Blackboard
features
  BLACKBOARD_ID: in parameter BLACKBOARD_ID_TYPE ;
  RETURN_CODE: out parameter RETURN_CODE_TYPE;
properties
  Programming_Properties::Source_Name => "CLEAR_BLACKBOARD";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Clear_Blackboard;

subprogram Get_Blackboard_Id
features
 BLACKBOARD_NAME: in parameter BLACKBOARD_NAME_TYPE ;
 BLACKBOARD_ID: out parameter BLACKBOARD_ID_TYPE ;
 RETURN_CODE: out parameter RETURN_CODE_TYPE ;
properties
  Programming_Properties::Source_Name => "GET_BLACKBOARD_ID";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Get_Blackboard_Id;

subprogram Get_Blackboard_Status
features
  BLACKBOARD_ID: in parameter BLACKBOARD_ID_TYPE ;
  BLACKBOARD_STATUS: out parameter BLACKBOARD_STATUS_TYPE ;
  RETURN_CODE: out parameter RETURN_CODE_TYPE ;
properties
  Programming_Properties::Source_Name => "GET_BLACKBOARD_STATUS";
  Programming_Properties::Source_Text => ("arinc653/blackboard.h");
end Get_Blackboard_Status;

end pok_runtime;