/*
* generated by Xtext
*/
package fr.tpt.aadl.ramses.transformation.trc.xtext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import fr.tpt.aadl.ramses.transformation.trc.xtext.services.TRCGrammarAccess;

public class TRCParser extends AbstractContentAssistParser {
	
	@Inject
	private TRCGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected fr.tpt.aadl.ramses.transformation.trc.xtext.ui.contentassist.antlr.internal.InternalTRCParser createParser() {
		fr.tpt.aadl.ramses.transformation.trc.xtext.ui.contentassist.antlr.internal.InternalTRCParser result = new fr.tpt.aadl.ramses.transformation.trc.xtext.ui.contentassist.antlr.internal.InternalTRCParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBooleanOperationsAccess().getNameAlternatives_0(), "rule__BooleanOperations__NameAlternatives_0");
					put(grammarAccess.getKeyWordAccess().getNameAlternatives_0(), "rule__KeyWord__NameAlternatives_0");
					put(grammarAccess.getOclExprAccess().getAlternatives(), "rule__OclExpr__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getClassifierContextDeclCSAccess().getAlternatives_2(), "rule__ClassifierContextDeclCS__Alternatives_2");
					put(grammarAccess.getOperationContextDeclCSAccess().getAlternatives_7(), "rule__OperationContextDeclCS__Alternatives_7");
					put(grammarAccess.getMultiplicityCSAccess().getAlternatives_1(), "rule__MultiplicityCS__Alternatives_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAlternatives_0(), "rule__MultiplicityStringCS__StringBoundsAlternatives_0");
					put(grammarAccess.getNamedElementAccess().getAlternatives(), "rule__NamedElement__Alternatives");
					put(grammarAccess.getEssentialOCLUnreservedNameAccess().getAlternatives(), "rule__EssentialOCLUnreservedName__Alternatives");
					put(grammarAccess.getPrimitiveTypeIdentifierAccess().getAlternatives(), "rule__PrimitiveTypeIdentifier__Alternatives");
					put(grammarAccess.getCollectionTypeIdentifierAccess().getAlternatives(), "rule__CollectionTypeIdentifier__Alternatives");
					put(grammarAccess.getSpecificationCSAccess().getAlternatives(), "rule__SpecificationCS__Alternatives");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getNameAlternatives_1_0(), "rule__EssentialOCLInfixOperatorCS__NameAlternatives_1_0");
					put(grammarAccess.getBinaryOperatorCSAccess().getAlternatives(), "rule__BinaryOperatorCS__Alternatives");
					put(grammarAccess.getNavigationOperatorCSAccess().getNameAlternatives_0(), "rule__NavigationOperatorCS__NameAlternatives_0");
					put(grammarAccess.getContextCsAccess().getAlternatives(), "rule__ContextCs__Alternatives");
					put(grammarAccess.getExpressCSAccess().getAlternatives(), "rule__ExpressCS__Alternatives");
					put(grammarAccess.getEssentialOCLPrefixOperatorAccess().getNameAlternatives_0(), "rule__EssentialOCLPrefixOperator__NameAlternatives_0");
					put(grammarAccess.getPrefixedExpOrLetExpCSAccess().getAlternatives(), "rule__PrefixedExpOrLetExpCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives(), "rule__PrimaryExpCS__Alternatives");
					put(grammarAccess.getPrimaryExpCSAccess().getAlternatives_1_3(), "rule__PrimaryExpCS__Alternatives_1_3");
					put(grammarAccess.getTypeLiteralCSAccess().getAlternatives(), "rule__TypeLiteralCS__Alternatives");
					put(grammarAccess.getPrimitiveLiteralExpCSAccess().getAlternatives(), "rule__PrimitiveLiteralExpCS__Alternatives");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getAlternatives(), "rule__BooleanLiteralExpCS__Alternatives");
					put(grammarAccess.getTrcSpecificationAccess().getGroup(), "rule__TrcSpecification__Group__0");
					put(grammarAccess.getModuleListAccess().getGroup(), "rule__ModuleList__Group__0");
					put(grammarAccess.getModuleListAccess().getGroup_3(), "rule__ModuleList__Group_3__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getModuleAccess().getGroup_1(), "rule__Module__Group_1__0");
					put(grammarAccess.getModuleAccess().getGroup_1_3(), "rule__Module__Group_1_3__0");
					put(grammarAccess.getTransformationListAccess().getGroup(), "rule__TransformationList__Group__0");
					put(grammarAccess.getTransformationListAccess().getGroup_3(), "rule__TransformationList__Group_3__0");
					put(grammarAccess.getTransformationAccess().getGroup(), "rule__Transformation__Group__0");
					put(grammarAccess.getTransformationAccess().getGroup_5(), "rule__Transformation__Group_5__0");
					put(grammarAccess.getTransformationAccess().getGroup_6(), "rule__Transformation__Group_6__0");
					put(grammarAccess.getTransformationAccess().getGroup_6_3(), "rule__Transformation__Group_6_3__0");
					put(grammarAccess.getTransformationImpactAccess().getGroup(), "rule__TransformationImpact__Group__0");
					put(grammarAccess.getTransformationImpactAccess().getGroup_1(), "rule__TransformationImpact__Group_1__0");
					put(grammarAccess.getTransformationDependencyListAccess().getGroup(), "rule__TransformationDependencyList__Group__0");
					put(grammarAccess.getTransformationDependencyListAccess().getGroup_5(), "rule__TransformationDependencyList__Group_5__0");
					put(grammarAccess.getTransformationDependencyAccess().getGroup(), "rule__TransformationDependency__Group__0");
					put(grammarAccess.getTransformationDependencyAccess().getGroup_8(), "rule__TransformationDependency__Group_8__0");
					put(grammarAccess.getRuleDependencyAccess().getGroup(), "rule__RuleDependency__Group__0");
					put(grammarAccess.getRuleDependencyAccess().getGroup_2(), "rule__RuleDependency__Group_2__0");
					put(grammarAccess.getRequiresOrExcludeDependencyAccess().getGroup(), "rule__RequiresOrExcludeDependency__Group__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getClassifierContextDeclCSAccess().getGroup(), "rule__ClassifierContextDeclCS__Group__0");
					put(grammarAccess.getClassifierContextDeclCSAccess().getGroup_2_0(), "rule__ClassifierContextDeclCS__Group_2_0__0");
					put(grammarAccess.getOperationContextDeclCSAccess().getGroup(), "rule__OperationContextDeclCS__Group__0");
					put(grammarAccess.getOperationContextDeclCSAccess().getGroup_3(), "rule__OperationContextDeclCS__Group_3__0");
					put(grammarAccess.getOperationContextDeclCSAccess().getGroup_3_1(), "rule__OperationContextDeclCS__Group_3_1__0");
					put(grammarAccess.getOperationContextDeclCSAccess().getGroup_7_0(), "rule__OperationContextDeclCS__Group_7_0__0");
					put(grammarAccess.getOperationContextDeclCSAccess().getGroup_7_1(), "rule__OperationContextDeclCS__Group_7_1__0");
					put(grammarAccess.getOperationContextDeclCSAccess().getGroup_7_2(), "rule__OperationContextDeclCS__Group_7_2__0");
					put(grammarAccess.getParameterCSAccess().getGroup(), "rule__ParameterCS__Group__0");
					put(grammarAccess.getParameterCSAccess().getGroup_0(), "rule__ParameterCS__Group_0__0");
					put(grammarAccess.getConstraintCSAccess().getGroup(), "rule__ConstraintCS__Group__0");
					put(grammarAccess.getConstraintCSAccess().getGroup_0(), "rule__ConstraintCS__Group_0__0");
					put(grammarAccess.getConstraintCSAccess().getGroup_0_1(), "rule__ConstraintCS__Group_0_1__0");
					put(grammarAccess.getDefPropertyCSAccess().getGroup(), "rule__DefPropertyCS__Group__0");
					put(grammarAccess.getTypeExpCSAccess().getGroup(), "rule__TypeExpCS__Group__0");
					put(grammarAccess.getMultiplicityCSAccess().getGroup(), "rule__MultiplicityCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup(), "rule__MultiplicityBoundsCS__Group__0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getGroup_1(), "rule__MultiplicityBoundsCS__Group_1__0");
					put(grammarAccess.getNamedElementAccess().getGroup_1(), "rule__NamedElement__Group_1__0");
					put(grammarAccess.getPathNameCSAccess().getGroup(), "rule__PathNameCS__Group__0");
					put(grammarAccess.getPathNameCSAccess().getGroup_1(), "rule__PathNameCS__Group_1__0");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getGroup(), "rule__EssentialOCLInfixOperatorCS__Group__0");
					put(grammarAccess.getContextCsAccess().getGroup_1(), "rule__ContextCs__Group_1__0");
					put(grammarAccess.getContextCsAccess().getGroup_1_1(), "rule__ContextCs__Group_1_1__0");
					put(grammarAccess.getExpressCSAccess().getGroup_0(), "rule__ExpressCS__Group_0__0");
					put(grammarAccess.getExpressCSAccess().getGroup_0_0(), "rule__ExpressCS__Group_0_0__0");
					put(grammarAccess.getExpressCSAccess().getGroup_1(), "rule__ExpressCS__Group_1__0");
					put(grammarAccess.getPrefixedExpCSAccess().getGroup(), "rule__PrefixedExpCS__Group__0");
					put(grammarAccess.getPrefixedExpOrLetExpCSAccess().getGroup_1(), "rule__PrefixedExpOrLetExpCS__Group_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_0(), "rule__PrimaryExpCS__Group_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_0_4(), "rule__PrimaryExpCS__Group_0_4__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_0_6(), "rule__PrimaryExpCS__Group_0_6__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_0_6_2(), "rule__PrimaryExpCS__Group_0_6_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_0_7(), "rule__PrimaryExpCS__Group_0_7__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_1(), "rule__PrimaryExpCS__Group_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_1_3_0(), "rule__PrimaryExpCS__Group_1_3_0__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_1_3_0_1(), "rule__PrimaryExpCS__Group_1_3_0_1__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_2(), "rule__PrimaryExpCS__Group_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_2_2(), "rule__PrimaryExpCS__Group_2_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_2_4(), "rule__PrimaryExpCS__Group_2_4__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_2_4_2(), "rule__PrimaryExpCS__Group_2_4_2__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_2_4_3(), "rule__PrimaryExpCS__Group_2_4_3__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_3(), "rule__PrimaryExpCS__Group_3__0");
					put(grammarAccess.getPrimaryExpCSAccess().getGroup_3_2(), "rule__PrimaryExpCS__Group_3_2__0");
					put(grammarAccess.getConstructorPartCSAccess().getGroup(), "rule__ConstructorPartCS__Group__0");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getGroup(), "rule__TypeLiteralWithMultiplicityCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup(), "rule__TupleTypeCS__Group__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1(), "rule__TupleTypeCS__Group_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1(), "rule__TupleTypeCS__Group_1_1__0");
					put(grammarAccess.getTupleTypeCSAccess().getGroup_1_1_1(), "rule__TupleTypeCS__Group_1_1_1__0");
					put(grammarAccess.getTuplePartCSAccess().getGroup(), "rule__TuplePartCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup(), "rule__CollectionLiteralExpCS__Group__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2(), "rule__CollectionLiteralExpCS__Group_2__0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getGroup_2_1(), "rule__CollectionLiteralExpCS__Group_2_1__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup(), "rule__CollectionLiteralPartCS__Group__0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getGroup_1(), "rule__CollectionLiteralPartCS__Group_1__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup(), "rule__CollectionTypeCS__Group__0");
					put(grammarAccess.getCollectionTypeCSAccess().getGroup_1(), "rule__CollectionTypeCS__Group_1__0");
					put(grammarAccess.getNestedExpCSAccess().getGroup(), "rule__NestedExpCS__Group__0");
					put(grammarAccess.getSelfExpCSAccess().getGroup(), "rule__SelfExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup(), "rule__LetExpCS__Group__0");
					put(grammarAccess.getLetExpCSAccess().getGroup_2(), "rule__LetExpCS__Group_2__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup(), "rule__LetVariableCS__Group__0");
					put(grammarAccess.getLetVariableCSAccess().getGroup_1(), "rule__LetVariableCS__Group_1__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup(), "rule__NavigatingArgCS__Group__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1(), "rule__NavigatingArgCS__Group_1__0");
					put(grammarAccess.getNavigatingArgCSAccess().getGroup_1_2(), "rule__NavigatingArgCS__Group_1_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup(), "rule__NavigatingBarArgCS__Group__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2(), "rule__NavigatingBarArgCS__Group_2__0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getGroup_2_2(), "rule__NavigatingBarArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup(), "rule__NavigatingSemiArgCS__Group__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2(), "rule__NavigatingSemiArgCS__Group_2__0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getGroup_2_2(), "rule__NavigatingSemiArgCS__Group_2_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup(), "rule__NavigatingCommaArgCS__Group__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2(), "rule__NavigatingCommaArgCS__Group_2__0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getGroup_2_2(), "rule__NavigatingCommaArgCS__Group_2_2__0");
					put(grammarAccess.getIfExpCSAccess().getGroup(), "rule__IfExpCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup(), "rule__TupleLiteralExpCS__Group__0");
					put(grammarAccess.getTupleLiteralExpCSAccess().getGroup_3(), "rule__TupleLiteralExpCS__Group_3__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup(), "rule__TupleLiteralPartCS__Group__0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getGroup_1(), "rule__TupleLiteralPartCS__Group_1__0");
					put(grammarAccess.getUnlimitedNaturalLiteralExpCSAccess().getGroup(), "rule__UnlimitedNaturalLiteralExpCS__Group__0");
					put(grammarAccess.getInvalidLiteralExpCSAccess().getGroup(), "rule__InvalidLiteralExpCS__Group__0");
					put(grammarAccess.getNullLiteralExpCSAccess().getGroup(), "rule__NullLiteralExpCS__Group__0");
					put(grammarAccess.getTrcSpecificationAccess().getModuleListAssignment_0(), "rule__TrcSpecification__ModuleListAssignment_0");
					put(grammarAccess.getTrcSpecificationAccess().getTransformationListAssignment_1(), "rule__TrcSpecification__TransformationListAssignment_1");
					put(grammarAccess.getTrcSpecificationAccess().getDependencyListAssignment_2(), "rule__TrcSpecification__DependencyListAssignment_2");
					put(grammarAccess.getTrcRuleAccess().getNameAssignment(), "rule__TrcRule__NameAssignment");
					put(grammarAccess.getModuleListAccess().getModulesAssignment_2(), "rule__ModuleList__ModulesAssignment_2");
					put(grammarAccess.getModuleListAccess().getModulesAssignment_3_1(), "rule__ModuleList__ModulesAssignment_3_1");
					put(grammarAccess.getModuleAccess().getNameAssignment_1_0(), "rule__Module__NameAssignment_1_0");
					put(grammarAccess.getModuleAccess().getRulesAssignment_1_2(), "rule__Module__RulesAssignment_1_2");
					put(grammarAccess.getModuleAccess().getRulesAssignment_1_3_1(), "rule__Module__RulesAssignment_1_3_1");
					put(grammarAccess.getTransformationListAccess().getTransformationsAssignment_2(), "rule__TransformationList__TransformationsAssignment_2");
					put(grammarAccess.getTransformationListAccess().getTransformationsAssignment_3_1(), "rule__TransformationList__TransformationsAssignment_3_1");
					put(grammarAccess.getTransformationAccess().getNameAssignment_0(), "rule__Transformation__NameAssignment_0");
					put(grammarAccess.getTransformationAccess().getModulesAssignment_4(), "rule__Transformation__ModulesAssignment_4");
					put(grammarAccess.getTransformationAccess().getModulesAssignment_5_1(), "rule__Transformation__ModulesAssignment_5_1");
					put(grammarAccess.getTransformationAccess().getImpactsAssignment_6_2(), "rule__Transformation__ImpactsAssignment_6_2");
					put(grammarAccess.getTransformationAccess().getImpactsAssignment_6_3_1(), "rule__Transformation__ImpactsAssignment_6_3_1");
					put(grammarAccess.getTransformationImpactAccess().getQualityAttributeNameAssignment_1_0(), "rule__TransformationImpact__QualityAttributeNameAssignment_1_0");
					put(grammarAccess.getTransformationImpactAccess().getImpactValueAssignment_2(), "rule__TransformationImpact__ImpactValueAssignment_2");
					put(grammarAccess.getTransformationDependencyListAccess().getNameAssignment_2(), "rule__TransformationDependencyList__NameAssignment_2");
					put(grammarAccess.getTransformationDependencyListAccess().getTransformationDependenciesAssignment_4(), "rule__TransformationDependencyList__TransformationDependenciesAssignment_4");
					put(grammarAccess.getTransformationDependencyListAccess().getTransformationDependenciesAssignment_5_1(), "rule__TransformationDependencyList__TransformationDependenciesAssignment_5_1");
					put(grammarAccess.getTransformationDependencyAccess().getAppliedTransformationAssignment_2(), "rule__TransformationDependency__AppliedTransformationAssignment_2");
					put(grammarAccess.getTransformationDependencyAccess().getAppliedRuleAssignment_4(), "rule__TransformationDependency__AppliedRuleAssignment_4");
					put(grammarAccess.getTransformationDependencyAccess().getFieldsAssignment_7(), "rule__TransformationDependency__FieldsAssignment_7");
					put(grammarAccess.getTransformationDependencyAccess().getFieldsAssignment_8_1(), "rule__TransformationDependency__FieldsAssignment_8_1");
					put(grammarAccess.getTransformationDependencyAccess().getRequiredTransformationsAssignment_12(), "rule__TransformationDependency__RequiredTransformationsAssignment_12");
					put(grammarAccess.getTransformationDependencyAccess().getBoolOPAssignment_13(), "rule__TransformationDependency__BoolOPAssignment_13");
					put(grammarAccess.getTransformationDependencyAccess().getRequiredTransformationsAssignment_14(), "rule__TransformationDependency__RequiredTransformationsAssignment_14");
					put(grammarAccess.getBooleanOperationsAccess().getNameAssignment(), "rule__BooleanOperations__NameAssignment");
					put(grammarAccess.getRuleDependencyAccess().getKwAssignment_0(), "rule__RuleDependency__KwAssignment_0");
					put(grammarAccess.getRuleDependencyAccess().getRedAssignment_1(), "rule__RuleDependency__RedAssignment_1");
					put(grammarAccess.getRuleDependencyAccess().getBoolOPAssignment_2_0(), "rule__RuleDependency__BoolOPAssignment_2_0");
					put(grammarAccess.getRuleDependencyAccess().getRedAssignment_2_1(), "rule__RuleDependency__RedAssignment_2_1");
					put(grammarAccess.getKeyWordAccess().getNameAssignment(), "rule__KeyWord__NameAssignment");
					put(grammarAccess.getRequiresOrExcludeDependencyAccess().getRequiredTransformationAssignment_1(), "rule__RequiresOrExcludeDependency__RequiredTransformationAssignment_1");
					put(grammarAccess.getRequiresOrExcludeDependencyAccess().getRequiredRuleAssignment_3(), "rule__RequiresOrExcludeDependency__RequiredRuleAssignment_3");
					put(grammarAccess.getRequiresOrExcludeDependencyAccess().getFieldsAssignment_5(), "rule__RequiresOrExcludeDependency__FieldsAssignment_5");
					put(grammarAccess.getRequiresOrExcludeDependencyAccess().getOclExpressionAssignment_7(), "rule__RequiresOrExcludeDependency__OclExpressionAssignment_7");
					put(grammarAccess.getClassifierContextDeclCSAccess().getSelfNameAssignment_1(), "rule__ClassifierContextDeclCS__SelfNameAssignment_1");
					put(grammarAccess.getClassifierContextDeclCSAccess().getInvariantsAssignment_2_0_1(), "rule__ClassifierContextDeclCS__InvariantsAssignment_2_0_1");
					put(grammarAccess.getClassifierContextDeclCSAccess().getDefinitionsAssignment_2_1(), "rule__ClassifierContextDeclCS__DefinitionsAssignment_2_1");
					put(grammarAccess.getOperationContextDeclCSAccess().getPathNameAssignment_1(), "rule__OperationContextDeclCS__PathNameAssignment_1");
					put(grammarAccess.getOperationContextDeclCSAccess().getParametersAssignment_3_0(), "rule__OperationContextDeclCS__ParametersAssignment_3_0");
					put(grammarAccess.getOperationContextDeclCSAccess().getParametersAssignment_3_1_1(), "rule__OperationContextDeclCS__ParametersAssignment_3_1_1");
					put(grammarAccess.getOperationContextDeclCSAccess().getOwnedTypeAssignment_6(), "rule__OperationContextDeclCS__OwnedTypeAssignment_6");
					put(grammarAccess.getOperationContextDeclCSAccess().getPreconditionsAssignment_7_0_1(), "rule__OperationContextDeclCS__PreconditionsAssignment_7_0_1");
					put(grammarAccess.getOperationContextDeclCSAccess().getPostconditionsAssignment_7_1_1(), "rule__OperationContextDeclCS__PostconditionsAssignment_7_1_1");
					put(grammarAccess.getOperationContextDeclCSAccess().getBodiesAssignment_7_2_3(), "rule__OperationContextDeclCS__BodiesAssignment_7_2_3");
					put(grammarAccess.getParameterCSAccess().getNameAssignment_0_0(), "rule__ParameterCS__NameAssignment_0_0");
					put(grammarAccess.getParameterCSAccess().getOwnedTypeAssignment_1(), "rule__ParameterCS__OwnedTypeAssignment_1");
					put(grammarAccess.getConstraintCSAccess().getNameAssignment_0_0(), "rule__ConstraintCS__NameAssignment_0_0");
					put(grammarAccess.getConstraintCSAccess().getMessageSpecificationAssignment_0_1_1(), "rule__ConstraintCS__MessageSpecificationAssignment_0_1_1");
					put(grammarAccess.getConstraintCSAccess().getSpecificationAssignment_2(), "rule__ConstraintCS__SpecificationAssignment_2");
					put(grammarAccess.getConstraintCSAccess().getSpecificationAssignment_3(), "rule__ConstraintCS__SpecificationAssignment_3");
					put(grammarAccess.getDefPropertyCSAccess().getStaticAssignment_0(), "rule__DefPropertyCS__StaticAssignment_0");
					put(grammarAccess.getDefPropertyCSAccess().getNameAssignment_4(), "rule__DefPropertyCS__NameAssignment_4");
					put(grammarAccess.getDefPropertyCSAccess().getOwnedTypeAssignment_6(), "rule__DefPropertyCS__OwnedTypeAssignment_6");
					put(grammarAccess.getDefPropertyCSAccess().getSpecificationAssignment_8(), "rule__DefPropertyCS__SpecificationAssignment_8");
					put(grammarAccess.getTypeExpCSAccess().getMultiplicityAssignment_1(), "rule__TypeExpCS__MultiplicityAssignment_1");
					put(grammarAccess.getMultiplicityStringCSAccess().getStringBoundsAssignment(), "rule__MultiplicityStringCS__StringBoundsAssignment");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getLowerBoundAssignment_0(), "rule__MultiplicityBoundsCS__LowerBoundAssignment_0");
					put(grammarAccess.getMultiplicityBoundsCSAccess().getUpperBoundAssignment_1_1(), "rule__MultiplicityBoundsCS__UpperBoundAssignment_1_1");
					put(grammarAccess.getNamedElementAccess().getIsStaticAssignment_1_0(), "rule__NamedElement__IsStaticAssignment_1_0");
					put(grammarAccess.getNamedElementAccess().getNameAssignment_1_1(), "rule__NamedElement__NameAssignment_1_1");
					put(grammarAccess.getNameSpaceAccess().getIDAssignment(), "rule__NameSpace__IDAssignment");
					put(grammarAccess.getTypeNameExpCSAccess().getPathNameAssignment(), "rule__TypeNameExpCS__PathNameAssignment");
					put(grammarAccess.getPathNameCSAccess().getPathAssignment_0(), "rule__PathNameCS__PathAssignment_0");
					put(grammarAccess.getPathNameCSAccess().getPathAssignment_1_1(), "rule__PathNameCS__PathAssignment_1_1");
					put(grammarAccess.getFirstPathElementCSAccess().getElementAssignment(), "rule__FirstPathElementCS__ElementAssignment");
					put(grammarAccess.getNextPathElementCSAccess().getElementAssignment(), "rule__NextPathElementCS__ElementAssignment");
					put(grammarAccess.getSpecificationCSAccess().getOwnedExpressionAssignment_0(), "rule__SpecificationCS__OwnedExpressionAssignment_0");
					put(grammarAccess.getSpecificationCSAccess().getExprStringAssignment_1(), "rule__SpecificationCS__ExprStringAssignment_1");
					put(grammarAccess.getEssentialOCLInfixOperatorCSAccess().getNameAssignment_1(), "rule__EssentialOCLInfixOperatorCS__NameAssignment_1");
					put(grammarAccess.getNavigationOperatorCSAccess().getNameAssignment(), "rule__NavigationOperatorCS__NameAssignment");
					put(grammarAccess.getContextCsAccess().getOwnedExpressionAssignment_0(), "rule__ContextCs__OwnedExpressionAssignment_0");
					put(grammarAccess.getContextCsAccess().getBAssignment_1_0(), "rule__ContextCs__BAssignment_1_0");
					put(grammarAccess.getContextCsAccess().getBOAssignment_1_1_2(), "rule__ContextCs__BOAssignment_1_1_2");
					put(grammarAccess.getExpressCSAccess().getOwnedExpressionAssignment_0_0_0(), "rule__ExpressCS__OwnedExpressionAssignment_0_0_0");
					put(grammarAccess.getExpressCSAccess().getOwnedOperatorAssignment_0_0_1(), "rule__ExpressCS__OwnedOperatorAssignment_0_0_1");
					put(grammarAccess.getExpressCSAccess().getOwnedExpressionAssignment_0_1(), "rule__ExpressCS__OwnedExpressionAssignment_0_1");
					put(grammarAccess.getExpressCSAccess().getOwnedOperatorAssignment_1_0(), "rule__ExpressCS__OwnedOperatorAssignment_1_0");
					put(grammarAccess.getExpressCSAccess().getOwnedExpressionAssignment_1_1(), "rule__ExpressCS__OwnedExpressionAssignment_1_1");
					put(grammarAccess.getPrefixedExpCSAccess().getOwnedOperatorAssignment_1(), "rule__PrefixedExpCS__OwnedOperatorAssignment_1");
					put(grammarAccess.getEssentialOCLPrefixOperatorAccess().getNameAssignment(), "rule__EssentialOCLPrefixOperator__NameAssignment");
					put(grammarAccess.getPrefixedExpOrLetExpCSAccess().getOwnedOperatorAssignment_1_1(), "rule__PrefixedExpOrLetExpCS__OwnedOperatorAssignment_1_1");
					put(grammarAccess.getPrefixedExpOrLetExpCSAccess().getOwnedExpressionAssignment_1_2(), "rule__PrefixedExpOrLetExpCS__OwnedExpressionAssignment_1_2");
					put(grammarAccess.getPrimaryExpCSAccess().getPathNameAssignment_0_1(), "rule__PrimaryExpCS__PathNameAssignment_0_1");
					put(grammarAccess.getPrimaryExpCSAccess().getFirstIndexesAssignment_0_3(), "rule__PrimaryExpCS__FirstIndexesAssignment_0_3");
					put(grammarAccess.getPrimaryExpCSAccess().getFirstIndexesAssignment_0_4_1(), "rule__PrimaryExpCS__FirstIndexesAssignment_0_4_1");
					put(grammarAccess.getPrimaryExpCSAccess().getSecondIndexesAssignment_0_6_1(), "rule__PrimaryExpCS__SecondIndexesAssignment_0_6_1");
					put(grammarAccess.getPrimaryExpCSAccess().getSecondIndexesAssignment_0_6_2_1(), "rule__PrimaryExpCS__SecondIndexesAssignment_0_6_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getAtPreAssignment_0_7_0(), "rule__PrimaryExpCS__AtPreAssignment_0_7_0");
					put(grammarAccess.getPrimaryExpCSAccess().getPathNameAssignment_1_1(), "rule__PrimaryExpCS__PathNameAssignment_1_1");
					put(grammarAccess.getPrimaryExpCSAccess().getOwnedPartsAssignment_1_3_0_0(), "rule__PrimaryExpCS__OwnedPartsAssignment_1_3_0_0");
					put(grammarAccess.getPrimaryExpCSAccess().getOwnedPartsAssignment_1_3_0_1_1(), "rule__PrimaryExpCS__OwnedPartsAssignment_1_3_0_1_1");
					put(grammarAccess.getPrimaryExpCSAccess().getValueAssignment_1_3_1(), "rule__PrimaryExpCS__ValueAssignment_1_3_1");
					put(grammarAccess.getPrimaryExpCSAccess().getPathNameAssignment_2_1(), "rule__PrimaryExpCS__PathNameAssignment_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getAtPreAssignment_2_2_0(), "rule__PrimaryExpCS__AtPreAssignment_2_2_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_2_4_0(), "rule__PrimaryExpCS__ArgumentAssignment_2_4_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_2_4_1(), "rule__PrimaryExpCS__ArgumentAssignment_2_4_1");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_2_4_2_0(), "rule__PrimaryExpCS__ArgumentAssignment_2_4_2_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_2_4_2_1(), "rule__PrimaryExpCS__ArgumentAssignment_2_4_2_1");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_2_4_3_0(), "rule__PrimaryExpCS__ArgumentAssignment_2_4_3_0");
					put(grammarAccess.getPrimaryExpCSAccess().getArgumentAssignment_2_4_3_1(), "rule__PrimaryExpCS__ArgumentAssignment_2_4_3_1");
					put(grammarAccess.getPrimaryExpCSAccess().getPathNameAssignment_3_1(), "rule__PrimaryExpCS__PathNameAssignment_3_1");
					put(grammarAccess.getPrimaryExpCSAccess().getAtPreAssignment_3_2_0(), "rule__PrimaryExpCS__AtPreAssignment_3_2_0");
					put(grammarAccess.getConstructorPartCSAccess().getPropertyAssignment_0(), "rule__ConstructorPartCS__PropertyAssignment_0");
					put(grammarAccess.getConstructorPartCSAccess().getInitExpressionAssignment_2(), "rule__ConstructorPartCS__InitExpressionAssignment_2");
					put(grammarAccess.getTypeLiteralWithMultiplicityCSAccess().getMultiplicityAssignment_1(), "rule__TypeLiteralWithMultiplicityCS__MultiplicityAssignment_1");
					put(grammarAccess.getTupleTypeCSAccess().getNameAssignment_0(), "rule__TupleTypeCS__NameAssignment_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_0(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_0");
					put(grammarAccess.getTupleTypeCSAccess().getOwnedPartsAssignment_1_1_1_1(), "rule__TupleTypeCS__OwnedPartsAssignment_1_1_1_1");
					put(grammarAccess.getTuplePartCSAccess().getNameAssignment_0(), "rule__TuplePartCS__NameAssignment_0");
					put(grammarAccess.getTuplePartCSAccess().getOwnedTypeAssignment_2(), "rule__TuplePartCS__OwnedTypeAssignment_2");
					put(grammarAccess.getPrimitiveTypeCSAccess().getNameAssignment(), "rule__PrimitiveTypeCS__NameAssignment");
					put(grammarAccess.getTypeLiteralExpCSAccess().getOwnedTypeAssignment(), "rule__TypeLiteralExpCS__OwnedTypeAssignment");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedTypeAssignment_0(), "rule__CollectionLiteralExpCS__OwnedTypeAssignment_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_0(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_0");
					put(grammarAccess.getCollectionLiteralExpCSAccess().getOwnedPartsAssignment_2_1_1(), "rule__CollectionLiteralExpCS__OwnedPartsAssignment_2_1_1");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getExpressionCSAssignment_0(), "rule__CollectionLiteralPartCS__ExpressionCSAssignment_0");
					put(grammarAccess.getCollectionLiteralPartCSAccess().getLastExpressionCSAssignment_1_1(), "rule__CollectionLiteralPartCS__LastExpressionCSAssignment_1_1");
					put(grammarAccess.getCollectionTypeCSAccess().getNameAssignment_0(), "rule__CollectionTypeCS__NameAssignment_0");
					put(grammarAccess.getCollectionTypeCSAccess().getOwnedTypeAssignment_1_1(), "rule__CollectionTypeCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getNestedExpCSAccess().getSourceAssignment_1(), "rule__NestedExpCS__SourceAssignment_1");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_1(), "rule__LetExpCS__VariableAssignment_1");
					put(grammarAccess.getLetExpCSAccess().getVariableAssignment_2_1(), "rule__LetExpCS__VariableAssignment_2_1");
					put(grammarAccess.getLetExpCSAccess().getInAssignment_4(), "rule__LetExpCS__InAssignment_4");
					put(grammarAccess.getLetVariableCSAccess().getNameAssignment_0(), "rule__LetVariableCS__NameAssignment_0");
					put(grammarAccess.getLetVariableCSAccess().getOwnedTypeAssignment_1_1(), "rule__LetVariableCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getLetVariableCSAccess().getInitExpressionAssignment_3(), "rule__LetVariableCS__InitExpressionAssignment_3");
					put(grammarAccess.getNavigatingArgCSAccess().getNameAssignment_0(), "rule__NavigatingArgCS__NameAssignment_0");
					put(grammarAccess.getNavigatingArgCSAccess().getOwnedTypeAssignment_1_1(), "rule__NavigatingArgCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getNavigatingArgCSAccess().getInitAssignment_1_2_1(), "rule__NavigatingArgCS__InitAssignment_1_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingBarArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingBarArgCSAccess().getNameAssignment_1(), "rule__NavigatingBarArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingBarArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingBarArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingBarArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingSemiArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getNameAssignment_1(), "rule__NavigatingSemiArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingSemiArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingSemiArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingSemiArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getPrefixAssignment_0(), "rule__NavigatingCommaArgCS__PrefixAssignment_0");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getNameAssignment_1(), "rule__NavigatingCommaArgCS__NameAssignment_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getOwnedTypeAssignment_2_1(), "rule__NavigatingCommaArgCS__OwnedTypeAssignment_2_1");
					put(grammarAccess.getNavigatingCommaArgCSAccess().getInitAssignment_2_2_1(), "rule__NavigatingCommaArgCS__InitAssignment_2_2_1");
					put(grammarAccess.getIfExpCSAccess().getConditionAssignment_1(), "rule__IfExpCS__ConditionAssignment_1");
					put(grammarAccess.getIfExpCSAccess().getThenExpressionAssignment_3(), "rule__IfExpCS__ThenExpressionAssignment_3");
					put(grammarAccess.getIfExpCSAccess().getElseExpressionAssignment_5(), "rule__IfExpCS__ElseExpressionAssignment_5");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_2(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_2");
					put(grammarAccess.getTupleLiteralExpCSAccess().getOwnedPartsAssignment_3_1(), "rule__TupleLiteralExpCS__OwnedPartsAssignment_3_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getNameAssignment_0(), "rule__TupleLiteralPartCS__NameAssignment_0");
					put(grammarAccess.getTupleLiteralPartCSAccess().getOwnedTypeAssignment_1_1(), "rule__TupleLiteralPartCS__OwnedTypeAssignment_1_1");
					put(grammarAccess.getTupleLiteralPartCSAccess().getInitExpressionAssignment_3(), "rule__TupleLiteralPartCS__InitExpressionAssignment_3");
					put(grammarAccess.getNumberLiteralExpCSAccess().getNameAssignment(), "rule__NumberLiteralExpCS__NameAssignment");
					put(grammarAccess.getNUMBER_LITERALAccess().getNumberAssignment(), "rule__NUMBER_LITERAL__NumberAssignment");
					put(grammarAccess.getStringLiteralExpCSAccess().getNameAssignment(), "rule__StringLiteralExpCS__NameAssignment");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_0(), "rule__BooleanLiteralExpCS__NameAssignment_0");
					put(grammarAccess.getBooleanLiteralExpCSAccess().getNameAssignment_1(), "rule__BooleanLiteralExpCS__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			fr.tpt.aadl.ramses.transformation.trc.xtext.ui.contentassist.antlr.internal.InternalTRCParser typedParser = (fr.tpt.aadl.ramses.transformation.trc.xtext.ui.contentassist.antlr.internal.InternalTRCParser) parser;
			typedParser.entryRuleTrcSpecification();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TRCGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TRCGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
